{"version":3,"sources":["./src/app/routes/userpassword/user-password.component.html","./src/app/routes/userpassword/user-password-routing.module.ts","./src/app/routes/userpassword/user-password.component.ts","./src/app/routes/userpassword/user-password.module.ts","./src/app/routes/userpassword/user-password.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8pC;;;;;;;;;;;;;;;;;;;ACAyC;AACc;AAEW;AAElE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;QAChC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAqB,EAAE;SACvD;KACF;CACF,CAAC;AAMF;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QAJrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACnBwD;AACb;AACxC;AAEQ;AAEa;AAM9D;IAQE,+BACU,EAAe,EACf,GAAqB,EACrB,GAAsB,EACtB,MAAc,EACd,GAAwB;QALlC,iBAMK;QALK,OAAE,GAAF,EAAE,CAAa;QACf,QAAG,GAAH,GAAG,CAAkB;QACrB,QAAG,GAAH,GAAG,CAAmB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAqB;QAXlC,eAAU,GAAG,KAAK,CAAC;QAEnB,SAAI,GAAQ,EAAE,CAAC;QAEf,cAAS,GAAQ,EAAE,CAAC;QAsDpB,QAAQ;QACR,0BAAqB,GAAG,UAAC,OAAoB;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAC3B;iBAAM,IAAI,OAAO,CAAC,KAAK,KAAK,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE;gBACpE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;aACvC;QACH,CAAC;IArDG,CAAC;IAEL,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE;gBACR,IAAI;gBACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC/C;YACD,WAAW,EAAE;gBACX,IAAI;gBACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC/C;YACD,iBAAiB,EAAE;gBACjB,IAAI;gBACJ,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC;aAC3E;SACF,CAAC,CAAC;IACL,CAAC;IAED,sCAAM,GAAN;QAAA,iBAaC;QAZC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,+BAA+B;QAC/B,IAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,gDAAgD;QAChD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;gBAChB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,IAAI,CAAC,MAAM,CAAC;oBAAE,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,sCAAQ,CAAC,CAAC;gBAC7C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC3C,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IACtB,CAAC;IAED,gDAAgB,GAAhB;QACE,IAAI,GAAG,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACpD,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC3D,OAAO,GAAG,CAAC;IACb,CAAC;;gBAjDa,0DAAW;gBACV,8DAAgB;gBAChB,+DAAiB;gBACd,sDAAM;gBACT,0EAAmB;;IAbvB,qBAAqB;QAJjC,+DAAS,CAAC;YACT,+KAA6C;YAC7C,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;+EAUc,0DAAW;YACV,8DAAgB;YAChB,+DAAiB;YACd,sDAAM;YACT,0EAAmB;OAbvB,qBAAqB,CAqEjC;IAAD,4BAAC;CAAA;AArEiC;;;;;;;;;;;;;;;;;;;;;;ACZO;AACY;AAEsB;AAET;AACJ;AAS9D;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAP9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,kEAAY,EAAE,uFAAyB,CAAC;YAClD,YAAY,EAAE,CAAC,8EAAqB,CAAC;YACrC,SAAS,EAAE;gBACT,0EAAmB;aACpB;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACfY;AACgC;AAEzB;AAGlD;IACE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,QAAG,GAAG,0DAAO,GAAG,eAAe,CAAC;IADQ,CAAC;IAGzC,4CAAc,GAAd,UAAe,GAAG;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;;gBALyB,+DAAU;;IADzB,mBAAmB;QAD/B,gEAAU,EAAE;+EAEe,+DAAU;OADzB,mBAAmB,CAQ/B;IAAD,0BAAC;CAAA;AAR+B","file":"userpassword-user-password-module-es5.js","sourcesContent":["module.exports = \"<div nz-row [nzGutter]=\\\"24\\\" class=\\\"pt-lg\\\">\\r\\n  <div nz-col nzXs=\\\"24\\\" nzSm=\\\"12\\\" nzMd=\\\"24\\\" class=\\\"mb-md\\\">\\r\\n    <nz-card [nzBordered]=\\\"false\\\" [nzTitle]=\\\"title\\\">\\r\\n      <form nz-form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\" se-container=\\\"1\\\" labelWidth=\\\"200\\\">\\r\\n\\r\\n        <se label=\\\"原密码\\\" error=\\\"请输入不少于6位字符的原密码\\\" required>\\r\\n          <input nz-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"请输入原密码\\\" />\\r\\n        </se>\\r\\n        <se label=\\\"新密码\\\" error=\\\"请输入不少于6位字符的新密码\\\" required>\\r\\n          <input nz-input type=\\\"password\\\" formControlName=\\\"newPassword\\\" placeholder=\\\"请输入新密码\\\" />\\r\\n        </se>\\r\\n        <se label=\\\"确认新密码\\\" error=\\\"确认新密码错误\\\" required>\\r\\n          <input nz-input type=\\\"password\\\" formControlName=\\\"verifyNewPassword\\\" placeholder=\\\"请确认信密码\\\" />\\r\\n        </se>\\r\\n\\r\\n\\r\\n        <se>\\r\\n          <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\"\\r\\n            [nzLoading]=\\\"submitting\\\">提交</button>\\r\\n          <button nz-button class=\\\"ml-sm\\\" type=\\\"reset\\\">重置</button>\\r\\n        </se>\\r\\n      </form>\\r\\n    </nz-card>\\r\\n  </div>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserPasswordComponent } from './user-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserPasswordComponent,\r\n    children: [\r\n      { path: 'password', component: UserPasswordComponent }\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserPasswordRoutingModule { }\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { UploadFile } from 'ng-zorro-antd';\r\nimport { UserPasswordService } from './user-password.service';\r\n\r\n@Component({\r\n  templateUrl: './user-password.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserPasswordComponent implements OnInit {\r\n  form: FormGroup;\r\n  submitting = false;\r\n  title: string;\r\n  user: any = {};\r\n\r\n  avatarUrl: any = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: NzMessageService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private srv: UserPasswordService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle();\r\n    this.form = this.fb.group({\r\n      password: [\r\n        null,\r\n        [Validators.required, Validators.minLength(6)],\r\n      ],\r\n      newPassword: [\r\n        null,\r\n        [Validators.required, Validators.minLength(6)],\r\n      ],\r\n      verifyNewPassword: [\r\n        null,\r\n        [Validators.required, Validators.minLength(6), this.confirmationValidator],\r\n      ]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitting = true;\r\n    // const obj = this.form.value;\r\n    const obj = this.formmatFormValue();\r\n    // if (this.file) obj.avatar = this.fileList[0];\r\n    this.srv.modifyPassword(obj).subscribe(resp => {\r\n      if (resp['data']) {\r\n        this.submitting = false;\r\n        if (resp['data']) this.msg.success(`密码已修改！`);\r\n        this.router.navigateByUrl('/project/page');\r\n        this.cdr.detectChanges();\r\n      }\r\n    })\r\n  }\r\n\r\n  setTitle() {\r\n    this.title = '修改密码';\r\n  }\r\n\r\n  formmatFormValue() {\r\n    let obj: any = new Object();\r\n    obj.password = this.form.controls[\"password\"].value;\r\n    obj.new_password = this.form.controls[\"newPassword\"].value;\r\n    return obj;\r\n  }\r\n\r\n  //确认密码验证\r\n  confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { required: true };\r\n    } else if (control.value !== this.form.controls['newPassword'].value) {\r\n      return { confirm: true, error: true };\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { UserPasswordRoutingModule } from './user-password-routing.module';\r\n\r\nimport { UserPasswordComponent } from './user-password.component';\r\nimport { UserPasswordService } from './user-password.service';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, UserPasswordRoutingModule],\r\n  declarations: [UserPasswordComponent],\r\n  providers: [\r\n    UserPasswordService,\r\n  ],\r\n})\r\nexport class UserPasswordModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { baseUrl } from '../../shared/app-config';\r\n\r\n@Injectable()\r\nexport class UserPasswordService {\r\n  constructor(private http: HttpClient) { }\r\n  url = baseUrl + 'user/password';\r\n\r\n  modifyPassword(obj) {\r\n    return this.http.put(this.url, obj);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}